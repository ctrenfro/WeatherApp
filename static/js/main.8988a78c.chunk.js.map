{"version":3,"sources":["Dailytemp.js","TempCard.js","App.js","index.js"],"names":["DailyTemp","props","className","locationName","temp_f","description","src","icon","alt","undefined","location","feelslike","humidity","wind","TempCard","date","Math","round","avgTemp","text","min","max","App","useState","data","setData","setLocation","url","value","onChange","event","target","onKeyPress","key","axios","get","then","response","console","log","placeholder","type","name","current","condition","feelslike_f","wind_mph","forecast","forecastday","map","w","index","day","avgtemp_f","mintemp_f","maxtemp_f","i","ReactDOM","render","document","getElementById"],"mappings":"wMAqCeA,EAnCG,SAACC,GACjB,OACE,mCACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SAA2B,4BAAID,EAAME,iBACrC,8CACA,qBAAKD,UAAU,OAAf,SAAuB,+BAAKD,EAAMG,OAAX,aACvB,qBAAKF,UAAU,cAAf,SAA8B,4BAAID,EAAMI,gBACxC,qBAAKH,UAAU,OAAf,SACG,qBAAKI,IAAKL,EAAMM,KAAMC,IAAI,0BAIXC,IAAnBR,EAAMS,UACL,sBAAKR,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAf,UACG,oBAAGA,UAAU,OAAb,UAAqBD,EAAMU,UAA3B,WACD,8CAEF,sBAAKT,UAAU,WAAf,UACG,8BAAID,EAAMW,SAAV,OACD,4CAEF,sBAAKV,UAAU,OAAf,UACG,8BAAID,EAAMY,KAAV,UACD,uDCPCC,EAnBE,SAACb,GAChB,OACE,mCACE,sBAAKC,UAAU,WAAf,UACE,8BAAM,6BAAKD,EAAMc,SACjB,qBAAKb,UAAU,aAAf,SACG,+BAAKc,KAAKC,MAAMhB,EAAMiB,SAAtB,aAEH,qBAAKhB,UAAU,cAAf,SAA8B,4BAAID,EAAMkB,SACxC,qBAAKjB,UAAU,OAAf,SACG,qBAAKI,IAAKL,EAAMM,KAAMC,IAAI,kBAE7B,gCAAMQ,KAAKC,MAAMhB,EAAMmB,KAAvB,eACA,gCAAMJ,KAAKC,MAAMhB,EAAMoB,KAAvB,qBCsDOC,MA/Df,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOb,EAAP,KAAiBgB,EAAjB,KAEMC,EAAG,4FAAwFjB,EAAxF,4BAYT,OACE,sBAAKR,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBACE0B,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAWJ,EAAYI,EAAMC,OAAOH,QAC9CI,WAhBe,SAACF,GACJ,UAAdA,EAAMG,MACRC,IAAMC,IAAIR,GAAKS,MAAK,SAACC,GACnBZ,EAAQY,EAASb,MACjBc,QAAQC,IAAIF,EAASb,SAEvBE,EAAY,MAWRc,YAAY,iBACZC,KAAK,aAGNjB,EAAKd,UACN,cAAC,EAAD,CACEA,SAAUc,EAAKd,SACfP,aAAcqB,EAAKd,SAASgC,KAC5BC,QAASnB,EAAKmB,QACdvC,OAAQoB,EAAKmB,QAAQvC,OACrBC,YAAamB,EAAKmB,QAAQC,UAAUzB,KACpCZ,KAAMiB,EAAKmB,QAAQC,UAAUrC,KAC7BI,UAAWa,EAAKmB,QAAQE,YACxBjC,SAAUY,EAAKmB,QAAQ/B,SACvBC,KAAMW,EAAKmB,QAAQG,aAIpBtB,EAAKd,UACN,sBAAKR,UAAU,iBAAf,UACE,oBAAIA,UAAU,UAAd,4BACCsB,EAAKuB,SAASC,YAAYC,KAAI,SAACC,EAAGC,GAAJ,OAC7B,8BACE,cAAC,EAAD,CACEpC,KAAMmC,EAAEnC,KACRG,QAASgC,EAAEE,IAAIC,UACflC,KAAM+B,EAAEE,IAAIR,UAAUzB,KACtBZ,KAAM2C,EAAEE,IAAIR,UAAUrC,KACtBa,IAAK8B,EAAEE,IAAIE,UACXjC,IAAK6B,EAAEE,IAAIG,UACXC,GAAC,KARKL,aC9CtBM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8988a78c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DailyTemp = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"top\">\r\n          <div className=\"location\">{<p>{props.locationName}</p>}</div>\r\n          <h3>Current Hour</h3>\r\n          <div className=\"temp\">{<h1>{props.temp_f}°f</h1>}</div>\r\n          <div className=\"description\">{<p>{props.description}</p>}</div>\r\n          <div className=\"icon\">\r\n            {<img src={props.icon} alt=\"weatherIcon\"></img>}\r\n          </div>\r\n        </div>\r\n\r\n        {props.location !== undefined && (\r\n          <div className=\"bottom\">\r\n            <div className=\"feels\">\r\n              {<p className=\"bold\">{props.feelslike}°f</p>}\r\n              <p>Feels Like</p>\r\n            </div>\r\n            <div className=\"humidity\">\r\n              {<p>{props.humidity}%</p>}\r\n              <p>Humidity</p>\r\n            </div>\r\n            <div className=\"wind\">\r\n              {<p>{props.wind} mph</p>}\r\n              <p>Wind Speed</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DailyTemp;\r\n","import React from \"react\";\r\n\r\nconst TempCard = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"tempCard\">\r\n        <div>{<h3>{props.date}</h3>}</div>\r\n        <div className=\"weeklyTemp\">\r\n          {<h3>{Math.round(props.avgTemp)}°f</h3>}\r\n        </div>\r\n        <div className=\"description\">{<p>{props.text}</p>}</div>\r\n        <div className=\"icon\">\r\n          {<img src={props.icon} alt=\"weatherIcon\"></img>}\r\n        </div>\r\n        <div>{Math.round(props.min)}°f min</div>\r\n        <div>{Math.round(props.max)}°f max</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TempCard;\r\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport DailyTemp from \"./Dailytemp\";\nimport TempCard from \"./TempCard\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [location, setLocation] = useState(\"\");\n\n  const url = `https://api.weatherapi.com/v1/forecast.json?key=38141a54e93a44cd89c141016210608&q=${location}&days=8&aqi=no&alerts=no`;\n\n  const searchLocation = (event) => {\n    if (event.key === \"Enter\") {\n      axios.get(url).then((response) => {\n        setData(response.data);\n        console.log(response.data);\n      });\n      setLocation(\"\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"search\">\n        <input\n          value={location}\n          onChange={(event) => setLocation(event.target.value)}\n          onKeyPress={searchLocation}\n          placeholder=\"Enter Location\"\n          type=\"text\"\n        />\n      </div>\n      {!!data.location && (\n        <DailyTemp\n          location={data.location}\n          locationName={data.location.name}\n          current={data.current}\n          temp_f={data.current.temp_f}\n          description={data.current.condition.text}\n          icon={data.current.condition.icon}\n          feelslike={data.current.feelslike_f}\n          humidity={data.current.humidity}\n          wind={data.current.wind_mph}\n        />\n      )}\n\n      {!!data.location && (\n        <div className=\"weeklyForecast\">\n          <h2 className=\"wkTitle\">3 day Forecast</h2>\n          {data.forecast.forecastday.map((w, index) => (\n            <div key={index}>\n              <TempCard\n                date={w.date}\n                avgTemp={w.day.avgtemp_f}\n                text={w.day.condition.text}\n                icon={w.day.condition.icon}\n                min={w.day.mintemp_f}\n                max={w.day.maxtemp_f}\n                i\n              />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}